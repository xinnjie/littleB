cmake_minimum_required(VERSION 3.10)
project(littleB)

set(CMAKE_CXX_STANDARD 14)
set(CMAKE_VERBOSE_MAKEFILE ON)
list(APPEND CMAKE_MODULE_PATH ${CMAKE_CURRENT_SOURCE_DIR}/cmake)
include(cmake_debug)
include(compile_proto)
find_package (Threads REQUIRED)
find_package(OpenSSL REQUIRED)
find_package(gflags REQUIRED) # TODO folly 使用了系统的 gflags, 而我使用了 gflags 的源码.   如何解决这种三方库和自己同时使用一个库的问题？目前只能依着 folly 使用系统的 gflags
find_package(Protobuf REQUIRED)
find_package(Boost REQUIRED)
find_package(folly CONFIG REQUIRED)
find_package(wangle CONFIG  REQUIRED)
find_package(fizz REQUIRED)
add_subdirectory(third_party EXCLUDE_FROM_ALL)
add_subdirectory(libsrc)
add_subdirectory(minigame_sever)

enable_testing()